generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model vendedores {
  id                       Int       @id @default(autoincrement())
  cedula                   String    @unique(map: "cedula") @db.VarChar(20)
  fechaExpedicionDocumento DateTime  @db.Date
  nombre                   String    @db.VarChar(100)
  email                    String    @db.VarChar(50)
  pedidos                  pedidos[]
}

model ciudades {
  id     Int    @id @default(autoincrement())
  nombre String @db.VarChar(100)
}

model detallePedido {
  id              Int     @id @default(autoincrement())
  idPedido        Int
  idProducto      Int
  tipo            String  @db.VarChar(50)
  tipoAceite      String? @db.VarChar(50)
  nombreProducto  String  @db.VarChar(300)
  pesoProducto    Float
  cantidadEnvases Int?
  cantidad        Int
  valor           Int
  pedidos         pedidos @relation(fields: [idPedido], references: [id], onDelete: Cascade)

  @@index([idPedido], map: "detallePedido_idPedido_fkey")
}

model pedidos {
  id                   Int             @id @default(autoincrement())
  idCliente            Int
  clienteSedeCiudad    String          @db.VarChar(100)
  clienteSedeDireccion String          @db.VarChar(100)
  idVendedor           Int
  fechaEntrega         DateTime        @db.Date
  finalidad            String          @db.VarChar(50)
  creado               DateTime        @db.Date
  estado               String          @db.VarChar(50)
  motivoRechazo        String?         @db.VarChar(500)
  comentario           String          @db.VarChar(100)
  detallePedido        detallePedido[]
  cliente              clientes        @relation(fields: [idCliente], references: [id])
  vendedor             vendedores      @relation(fields: [idVendedor], references: [id])

  @@index([idCliente], map: "pedidos_idCliente_fkey")
  @@index([idVendedor], map: "pedidos_idVendedor_fkey")
}

model clientes {
  id              Int                         @id @default(autoincrement())
  razonSocial     String                      @db.VarChar(100)
  email           String                      @db.VarChar(50)
  nombreComercial String                      @db.VarChar(100)
  direccion       String                      @db.VarChar(100)
  celular         String                      @db.VarChar(20)
  tipoPersona     String                      @db.VarChar(100)
  nit             String                      @unique(map: "nit") @db.VarChar(20)
  sedes           detalleClientesSedes[]
  vendedores      detalleClientesVendedores[]
  pedidos         pedidos[]
}

model detalleClientesVendedores {
  id         Int      @id @default(autoincrement())
  idCliente  Int
  idVendedor Int
  estado     String   @db.VarChar(50)
  cliente    clientes @relation(fields: [idCliente], references: [id], map: "detalleClientes_idCliente_fkey")

  @@index([idCliente], map: "detalleClientes_idCliente_fkey")
}

model detalleClientesSedes {
  id        Int      @id @default(autoincrement())
  idCliente Int
  direccion String   @db.VarChar(100)
  ciudad    String   @db.VarChar(100)
  cliente   clientes @relation(fields: [idCliente], references: [id])

  @@index([idCliente], map: "detalleClientesSedes_idCliente_fkey")
}

model cargues {
  id            Int             @id @default(autoincrement())
  fecha         DateTime        @db.Date
  fechaCreado   DateTime        @db.Date
  observaciones String          @db.VarChar(500)
  detalleCargue detalleCargue[]
}

model detalleCargue {
  id       Int     @id @default(autoincrement())
  idCargue Int
  idPedido Int
  cargue   cargues @relation(fields: [idCargue], references: [id])

  @@index([idCargue], map: "detalleCargue_idCargue_fkey")
}
